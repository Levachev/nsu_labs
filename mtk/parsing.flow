import lingo/pegcode/driver;
import lingo/peg;
import lingo/linecolumn;
import text/deserialize_string;
import lingo/pegaction;

    ArExpr ::= ArSum, ArMul, ArInt;
        ArSum(lhs : ArExpr, rhs : ArExpr);
        ArMul(lhs : ArExpr, rhs : ArExpr);
        ArInt(val : int);

    ar2s(e : ArExpr) -> string {
        switch (e) {
            ArSum(lhs, rhs): "(" + ar2s(lhs) + "+" + ar2s(rhs) + ")";
            ArMul(lhs, rhs): "(" + ar2s(lhs) + "*" + ar2s(rhs) + ")";
            ArInt(val): i2s(val);
        }
    }

    ar2i(e : ArExpr) ->int {
        switch (e) {
            ArSum(lhs, rhs):ar2i(lhs) + ar2i(rhs);
            ArMul(lhs, rhs):ar2i(lhs) * ar2i(rhs);
            ArInt(val): val;
        }
    }

    s2ar(str : string) -> ArExpr{
        e_gr = "#include grammar.lingo";
        parsic(
            compilePegGrammar(e_gr),
            str,
            SemanticActions(setTree(defaultPegActions.t, "CreateInt", \s ->s2i(s[0])))
        )
    }

    main() {
    expr = "((((1 + 2)*0)+5)*2)";

    println(ar2s(s2ar(expr)));

    println(ar2i(s2ar(expr)));



    quit(0);
}
